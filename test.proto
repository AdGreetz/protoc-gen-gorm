syntax = "proto3";

package pb;
import "orm/orm.proto";
import "google/protobuf/wrappers.proto";

option (orm.package) = "orm";

// test_id_and_stuff is a message that serves as an example
message test_types {
  option (orm.opts).ormable = true;
  string api_only_string = 1 [(orm.field).drop = true];
  repeated int32 numbers = 2;
  google.protobuf.StringValue optional_string = 3;
  enum status{
    UNKNOWN = 0;
    GOOD = 1;
    BAD = 2;
  }
  status becomes_int = 4;
}

message the_uuid_and_ip {
  option (orm.opts) = {
    ormable: true,
    include: [
      {type: "int32", name: "uuid", tags: [{pkg:"gorm",values:["primary_key"]}]}
      ]
    };
  string ip = 1 [(orm.field) = {tags:[{pkg:"gorm",values:["ip_addr"]}]}];
  repeated test_types things = 3;
  test_types a_nested_object = 4;
}

message something_normal {
  string something_average = 1;
}

message something_crazy {
  option (orm.opts).ormable = true;
  something_normal a_thing = 1;
}
