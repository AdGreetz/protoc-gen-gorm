syntax = "proto3";

package example;
import "github.com/infobloxopen/protoc-gen-gorm/options/orm.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/infobloxopen/protoc-gen-gorm/example/feature_demo;example";

// test_id_and_stuff is a message that serves as an example
message test_types {
  option (orm.opts) = {ormable:true, table: "smorgasbord"};
  string api_only_string = 1 [(orm.field).drop = true];
  repeated int32 numbers = 2;
  google.protobuf.StringValue optional_string = 3;
  enum status{
    UNKNOWN = 0;
    GOOD = 1;
    BAD = 2;
  }
  status becomes_int = 4;
  google.protobuf.Empty nothingness = 5;
}

message type_with_id {
  option (orm.opts) = {
    ormable: true,
    include: [
      {type: "int32", name: "uuid", tags: "gorm:\"primary_key\""}
      ]
    };
  string ip = 1 [(orm.field) = {tags: "gorm:\"ip_addr\""}];
  repeated test_types things = 3;
  test_types a_nested_object = 4;
}

message api_only_type {
  string contents = 1;
}

message type_becomes_empty {
  option (orm.opts).ormable = true;
  api_only_type a_thing = 1;
}
